swagger: '2.0'
info:
  version: 1.0.0
  title: iBoxen carrier integration
host: integration.iboxen-staging.se
basePath: /carrier
schemes:
- https
paths:
  /delivery:
    post:
      summary: Add a parcel to iBoxen
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/delivery'
      responses:
        400:
          description: Invalid input
        404:
          description: Error with reason
        '200':
          description: ''
          examples: 
            application/json: [
  {
  location: {
    id: '6200d35f24fe6e3dd620942d',
    address: { street: 'Götaforsvägen 9', zip: '12266', city: 'Stockholm' },
    coordinates: [ 59.2712095, 18.0565393 ]
  },
  box: 15
} 
  ]
        '201':
          description: 'The parcel has been created'
          examples:
            application/json: {"status": "ok", "message": "Parcel is pre-booked" }
    put:
      summary: Update a parcel
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/deliveryUpdate'
      responses:
        '200':
          description: ''
          examples: 
            application/json: {"location":{"id":"605b59dccd8b1c5ecad9c769","address":{"street":"Götaforsvägen 21", "zip":"12266", "city":"Enskede","locationDescriptionShort":"Short location description","locationDescriptionLong":"A looong description of the location placement"},"coordinates":[50,50]},"box":12}
        400:
          description: Invalid input
        404:
          description: Error with reason
    
  
  /status:
    post:
      summary: Add status to a parcel
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/deliveryStatus'
      responses:
        400:
          description: Invalid input
    
    get:
      summary: Get parcels statuses
      description: 'Query parameters, ex: /parcelId=12345&parcelId=00006'
      parameters:
        - name: parcelId
          in: query
          type: string
          required: true
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: 'An array with parcel statuses. statusNames: allocated, on-way, in-box, collected, marked-for-return, driver-picked-up, cancelled, deviation. Deviation has a "data"-field with the error code.'
          examples: 
            application/json: [{ "parcelId": "12345", "locationId": "604b5c2848ff1d935c2bb557", "locationNumber": "000123", "currentStatus": "in-box", "statuses": [{"statusName":"in-box", "created":"iso date string"}, {"statusName":"deviation", "data":"lockDidNotOpen", "created":"iso date string"}] }]

          
  /locations:
    get:
      summary: Get a list of locations
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        '200':
          description: ''
          examples: 
            application/json: [
  {
    "locationId": "5ff8232af30dfcffbcdc7b9b",
    "locationNumber": "000123",
    "address": {
      "street": "Odengatan 1",
      "zip": "11424",
      "city": "Stockholm"
    },
    "coordinates": [
      59.34678,
      18.06671
    ],
    "locationDescriptionShort":"Description of location's placement",
    "locationDescriptionLong":"Shortened description of location's placement"
  }]
      
    post:
      summary: (Get) a list of locations
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/locations'
      responses:
        400:
          description: Invalid input
        '200':
          description: ''
          examples: 
            application/json: [
  {
    "locationId": "5ff8232af30dfcffbcdc7b9b",
    "locationNumber": "000123",
    "address": {
      "street": "Odengatan 1",
      "zip": "11424",
      "city": "Stockholm"
    },
    "coordinates": [
      59.34678,
      18.06671
    ],
    "distanceFromQueriedAddress": 1148,
    "lowBoxesAvailable": true,
    "locationDescriptionShort":"Description of location's placement",
    "locationDescriptionLong":"Shortened description of location's placement"
  }]

  /locations/area:
    get:
      summary: A less granular query using area specific details, such as zip-codes.
      description: 'Query parameters, ex: /area?zip=12266'
      parameters:
        - name: zip
          in: query
          type: string
        - name: city
          in: query
          type: string
            
      responses:
        200:
          description: Array of locations
          
definitions:
  delivery:
    required: 
     - senderName
     - period
    properties:
      receiver:
          $ref: '#/definitions/deliveryReceiver'
        
      delivery:
        $ref: '#/definitions/deliveryDetails'
        
      senderName:
        type: string
        description: 'The retailer shop'
      requiresLowBox:
        type: boolean
        description: 'The receiver needs a box close to the bottom of the locker'
      preferedLocations:
        type: array
        example: ["604f73fd02fc690ae7d7e57f", "000790"]
        items:
          type: string
        description: 'Provided if specific locations are wanted, prioritized by array index. Can be either locationId or locationNumber'
      preBooked:
        type:  boolean
        default: false
        description: If this flag is set to true the system will not try to allocate a box. It will only register the parcel and set the status to 'created'. This is useful if the carrier wants to make a 'soft' allocation and make a real box allocation in a later time.

#

  deliveryReceiver:
    type: object
    required: 
      - phoneNumber
      - firstName
    properties:
      phoneNumber:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
        
      address:
        $ref: '#/definitions/address'

#

  address:
    type: object
    required:
      - street
      - zip
      - city
    properties:
      street:
        type: string
        description: 'Full street with number'
      zip:
        type: string
      city:
        type: string

#

  deliveryDetails:
    type: object
    properties:
      parcelId:
        type: string
        description: 'Unique id, same value as displayed with a barcode on the parcel'
      shipmentId:
        type: string
      dimensions:
        description: 'Parcel dimensions millimeters'
        type: array
        items:
          type: string
    required:
      - parcelId
      - dimensions
      
#

  deliveryStatus:
    type: object
    required:
      - parcelId
      - name
    properties:
      parcelId:
        type: string
      name:
        type: string
        description: 'Status names: on-way, marked-for-return, cancelled'
        
#

  locations:
    type: object
    required:
     - street
     - city
     - zip
    properties:
      address:
        $ref: '#/definitions/address'
      query:
        $ref: '#/definitions/locationsQuery'
        
#

  parcelStatus:
    type: array
    items:
      type: object
      properties:
        parcelId:
          type: string
            
#

  locationsQuery:
    type: object
    properties:
      locationMaxDistance:
        type: number
        description: Max distance from origin address in meter
      locationsMaxQty:
        type: number
        description: Max number in results
      requiresLowBox:
        type: boolean
        description: Require locations with low boxes <120cm height available
        default: false
      returnNumberOfAvailableBoxes:
        type: boolean
        description: Project number of available boxes on the location to property 'returnNumberOfAvailableBoxes'
        default: false
      includeFreeLocationsOnly:
        type: boolean
        description: The query should only return locations that has free boxes
        default: false
      dimensions:
        description: 'Parcel dimensions millimeters'
        type: array
        items:
          type: integer
        example: [10, 10, 10]
        
#

  deliveryUpdate:
    type: object
    required:
      - parcelId
    properties:
      parcelId:
        type: string
      preferedLocations:
        type: array
        items:
          type: string
        description: 'Provided if a specific location is wanted, prioritized by array index. Can be either locationId or locationNumber'
      #requiresLowBox:
       # type: boolean
        #description: 'The receiver needs a box close to the bottom of the locker'
      dimensions:
        description: 'Parcel dimensions millimeters'
        type: array
        items:
          type: integer
        default: []
        example: [1, 2, 3]
      statusName:
        type: string
        description: Status to transition into
      receiver:
        type: object
        properties:
          phoneNumber:
            type: string
          email:
            type: string